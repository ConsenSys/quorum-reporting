// Code generated by MockGen. DO NOT EDIT.
// Source: quorumengineering/quorum-report/database/elasticsearch (interfaces: DeletionCoordinator)

// Package elasticsearch_mocks is a generated GoMock package.
package elasticsearch_mocks

import (
	gomock "github.com/golang/mock/gomock"
	types "quorumengineering/quorum-report/types"
	reflect "reflect"
)

// MockDeletionCoordinator is a mock of DeletionCoordinator interface
type MockDeletionCoordinator struct {
	ctrl     *gomock.Controller
	recorder *MockDeletionCoordinatorMockRecorder
}

// MockDeletionCoordinatorMockRecorder is the mock recorder for MockDeletionCoordinator
type MockDeletionCoordinatorMockRecorder struct {
	mock *MockDeletionCoordinator
}

// NewMockDeletionCoordinator creates a new mock instance
func NewMockDeletionCoordinator(ctrl *gomock.Controller) *MockDeletionCoordinator {
	mock := &MockDeletionCoordinator{ctrl: ctrl}
	mock.recorder = &MockDeletionCoordinatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeletionCoordinator) EXPECT() *MockDeletionCoordinatorMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockDeletionCoordinator) Delete(arg0 types.Address) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockDeletionCoordinatorMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDeletionCoordinator)(nil).Delete), arg0)
}
